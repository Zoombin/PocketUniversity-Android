package com.xyhui.activity;

import android.annotation.SuppressLint;
import android.app.AlertDialog;
import android.content.DialogInterface;
import android.graphics.Bitmap;
import android.graphics.Color;
import android.text.TextUtils;
import android.view.KeyEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.webkit.WebSettings;
import android.webkit.WebView;
import android.webkit.WebViewClient;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;

import com.koushikdutta.urlimageviewhelper.UrlImageViewHelper;
import com.mslibs.utils.JSONUtils;
import com.mslibs.utils.VolleyLog;
import com.xyhui.R;
import com.xyhui.api.Api;
import com.xyhui.api.CallBack;
import com.xyhui.utils.Params;
import com.xyhui.widget.FLActivity;

public class WebViewActivity extends FLActivity {

	public static final int TYPE_NORMAL_PAGE = 0;
	public static final int TYPE_IMAGE = 1;
	public static final int TYPE_TRAVEL = 2;

	private Button btn_back;
	private Button btn_refresh;
	private TextView navbar_TitleText;

	private LinearLayout emptyUrl_layout;
	private LinearLayout loading_layout;
	private LinearLayout timeout_layout;

	private WebView mWebView;

	private String mTitle;
	private String mUrl;

	private int mType = TYPE_NORMAL_PAGE;

	private boolean isLoadingError = false;

	@Override
	public void linkUiVar() {
		setContentView(R.layout.activity_webview);

		btn_back = (Button) findViewById(R.id.btn_back);
		btn_refresh = (Button) findViewById(R.id.btn_refresh);
		navbar_TitleText = (TextView) findViewById(R.id.navbar_TitleText);

		mWebView = (WebView) findViewById(R.id.webView);

		emptyUrl_layout = (LinearLayout) findViewById(R.id.emptyUrl_layout);
		loading_layout = (LinearLayout) findViewById(R.id.loading_layout);
		timeout_layout = (LinearLayout) findViewById(R.id.timeout_layout);
	}

	@Override
	public void bindListener() {
		btn_back.setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View v) {
				// Check if there's history
				if (mWebView.canGoBack()) {
					mWebView.goBack();
				} else {
					finish();
				}
			}
		});

		btn_refresh.setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View v) {
				// 关闭返回
				isLoadingError = false;
				mWebView.reload();
			}
		});

		mWebView.setWebViewClient(new WebViewClient() {

			@Override
			public void onPageStarted(WebView view, String url, Bitmap favicon) {
				super.onPageStarted(view, url, favicon);
				// 开始
				VolleyLog.d("--------------------------onPageStarted--------------------------");
				mWebView.removeAllViews();
				showProgress();
				btn_refresh.setEnabled(false);

				if (TYPE_TRAVEL == mType) {
					showProgress();
					new Api(lyLuckCB, mActivity).lyLucky(PuApp.get().getToken());
				}
			}

			@Override
			public void onReceivedError(WebView view, int errorCode, String description,
					String failingUrl) {
				super.onReceivedError(view, errorCode, description, failingUrl);
				// 加载失败
				VolleyLog.d("--------------------------onReceivedError--------------------------");
				isLoadingError = true;
			}

			@Override
			public void onPageFinished(WebView view, String url) {
				super.onPageFinished(view, url);
				// 结束
				VolleyLog.d("--------------------------onPageFinished--------------------------");
				if (isLoadingError) {
					timeout_layout.setVisibility(View.VISIBLE);
				} else {
					timeout_layout.setVisibility(View.GONE);
				}
				dismissProgress();
				btn_refresh.setVisibility(View.VISIBLE);
				btn_refresh.setEnabled(true);
			}
		});
	}

	@SuppressLint("SetJavaScriptEnabled")
	@Override
	public void ensureUi() {
		WebSettings webSet = mWebView.getSettings();

		if (getIntent().hasExtra(Params.INTENT_EXTRA.WEBVIEW_TITLE)) {
			mTitle = getIntent().getStringExtra(Params.INTENT_EXTRA.WEBVIEW_TITLE);
			navbar_TitleText.setText(mTitle);
		}

		if (getIntent().hasExtra(Params.INTENT_EXTRA.WEBVIEW_URL)) {
			mUrl = getIntent().getStringExtra(Params.INTENT_EXTRA.WEBVIEW_URL);
			emptyUrl_layout.setVisibility(View.GONE);
			mWebView.setVisibility(View.VISIBLE);
		} else {
			emptyUrl_layout.setVisibility(View.VISIBLE);
			mWebView.setVisibility(View.GONE);
			return;
		}

		if (getIntent().hasExtra(Params.INTENT_EXTRA.WEBVIEW_TYPE)) {
			mType = getIntent().getIntExtra(Params.INTENT_EXTRA.WEBVIEW_TYPE, TYPE_NORMAL_PAGE);
			if (TYPE_IMAGE == mType) {
				mWebView.setBackgroundColor(Color.BLACK);
				mWebView.setVerticalScrollBarEnabled(false);
				mWebView.setHorizontalScrollBarEnabled(false);
			}
		}

		loading_layout.setVisibility(View.GONE);
		timeout_layout.setVisibility(View.GONE);
		btn_refresh.setVisibility(View.GONE);
		btn_refresh.setEnabled(false);

		webSet.setUseWideViewPort(true);
		webSet.setLoadWithOverviewMode(true);
		webSet.setJavaScriptEnabled(true);

		// 支持缩放
		webSet.setSupportZoom(true);
		// 使用内置缩放机制
		webSet.setBuiltInZoomControls(true);
		// 不显示缩放控件
		webSet.setDisplayZoomControls(false);

		mWebView.setInitialScale(0);

		VolleyLog.d("--------------------------webView.loadUrl--------------------------");
		mWebView.loadUrl(mUrl);
		mWebView.requestFocus();
	}

	@Override
	public boolean onKeyDown(int keyCode, KeyEvent event) {
		// Check if the key event was the Back button and if there's history
		if ((keyCode == KeyEvent.KEYCODE_BACK) && mWebView.canGoBack()) {
			mWebView.goBack();
			return true;
		}

		// If it wasn't the Back key or there's no web page history, bubble up to the default
		// system behavior (probably exit the activity)
		return super.onKeyDown(keyCode, event);
	}

	CallBack lyLuckCB = new CallBack() {
		@Override
		public void onSuccess(String response) {
			dismissProgress();
			Lottery lottery = JSONUtils.fromJson(response, Lottery.class);

			if (null != lottery) {
				String show = lottery.show;
				String msg = lottery.msg;
				String img = lottery.img;

				if ("0".equals(show)) {
					return;
				} else if (!TextUtils.isEmpty(msg) && !TextUtils.isEmpty(img)) {

					LinearLayout linearLayout = new LinearLayout(WebViewActivity.this);
					// 设置活动码
					final TextView text = new TextView(WebViewActivity.this);
					final ImageView image = new ImageView(WebViewActivity.this);

					LinearLayout.LayoutParams imageParams = new LinearLayout.LayoutParams(200, 200);
					imageParams.setMargins(20, 20, 20, 20);
					image.setLayoutParams(imageParams);

					LinearLayout.LayoutParams textParams = new LinearLayout.LayoutParams(
							LinearLayout.LayoutParams.MATCH_PARENT,
							LinearLayout.LayoutParams.WRAP_CONTENT);
					textParams.setMargins(20, 20, 20, 20);

					text.setTextSize(18);
					text.setText(msg);
					text.setLayoutParams(textParams);

					linearLayout.setLayoutParams(textParams);
					linearLayout.addView(image);
					linearLayout.addView(text);

					UrlImageViewHelper.setUrlDrawable(image, img, R.drawable.img_default,
							UrlImageViewHelper.CACHE_DURATION_THREE_DAYS, null);

					new AlertDialog.Builder(mActivity).setTitle("每日旅游抽奖").setView(linearLayout)
							.setPositiveButton("确定", new DialogInterface.OnClickListener() {
								public void onClick(DialogInterface dialog, int whichButton) {
									dialog.dismiss();
								}
							}).setCancelable(false).show();
				}
			}
		}
	};

	class Lottery {
		String show;
		String msg;
		String img;
	}
}

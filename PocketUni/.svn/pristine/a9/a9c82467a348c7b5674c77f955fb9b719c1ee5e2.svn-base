package com.xyhui.activity;

import android.app.AlertDialog;
import android.content.DialogInterface;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.text.TextUtils;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.ImageView;
import android.widget.TextView;

import com.mslibs.utils.JSONUtils;
import com.mslibs.utils.NotificationsUtil;
import com.mslibs.utils.VolleyLog;
import com.xyhui.R;
import com.xyhui.api.Api;
import com.xyhui.api.CallBack;
import com.xyhui.types.Response;
import com.xyhui.utils.DownloadImpl;
import com.xyhui.utils.Params;
import com.xyhui.utils.PrefUtil;
import com.xyhui.widget.FLActivity;

public class LoadingActivity extends FLActivity {

	/** 跳转到下一个Activity的延时时间 **/
	private final int DELAYED_GOTO_DURATION = 500;

	private int delayTimes = 0;
	private final int MAX_DELAY_TIMES = 15;

	private String mNewVersionUrl;
	private String mCurrent_version;

	private Handler mHandler = new Handler();

	private boolean isFirstLaunch;

	private ImageView img_loading_bg;
	private TextView tv_versioninfo;

	private PrefUtil mPrefUtil;

	// 版本信息
	private Response versionInfo;

	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_loading);
		mPrefUtil = new PrefUtil();

		PuApp.get().getLocalDataMgr().clearAllData();
		linkUiVar();
		bindListener();
		ensureUi();
	}

	@Override
	public void linkUiVar() {
		img_loading_bg = (ImageView) findViewById(R.id.img_loading_bg);

		tv_versioninfo = (TextView) findViewById(R.id.tv_versioninfo);
	}

	@Override
	public void bindListener() {

	}

	@Override
	public void ensureUi() {
		mCurrent_version = getVersion();
		String oldVersion = mPrefUtil.getPreference(Params.LOCAL.VERSION);

		if (null == oldVersion || mCurrent_version.compareTo(oldVersion) != 0) {
			isFirstLaunch = true;
			mPrefUtil.setPreference(Params.LOCAL.VERSION, mCurrent_version);
		} else {
			isFirstLaunch = false;
		}

		tv_versioninfo.setText(String.format("V %s", mCurrent_version));

		// 检测是否首次启动 默认 isFirstLaunch = true
		if (isFirstLaunch) {
			img_loading_bg.setVisibility(View.VISIBLE);
			img_loading_bg.setOnClickListener(new OnClickListener() {
				@Override
				public void onClick(View v) {
					new Api(callback, mActivity).getVersion();
				}
			});
		} else {
			img_loading_bg.setVisibility(View.GONE);
			new Api(callback, mActivity).getVersion();
		}

		PuApp.get().getLocalDataMgr().setCitys(mActivity);
		PuApp.get().getLocalDataMgr().setSchools(mActivity);

		if (PuApp.get().isLogon()) {
			PuApp.get().getLocalDataMgr().setEventCats(mActivity);
			PuApp.get().getLocalDataMgr().setCourseCats(mActivity);
			PuApp.get().getLocalDataMgr().setGroupCats(mActivity);
			PuApp.get().getLocalDataMgr().setUserData(mActivity);
			PuApp.get().getLocalDataMgr().setEventOrgs(mActivity);
		}
	}

	public void signinOrMain() {
		mHandler.postDelayed(new Runnable() {
			public void run() {
				VolleyLog.d("*******signinOrMain******* \n DelayTimes= %d", delayTimes);
				if (PuApp.get().isLogon() && PuApp.get().getLocalDataMgr().allDataArrived()) {
					Intent intent = new Intent();
					if (!PuApp.get().getLocalDataMgr().isVerified()) {
						intent.setClass(LoadingActivity.this, AccountBindingActivity.class);
					} else if (!PuApp.get().getLocalDataMgr().isInited()) {
						intent.setClass(LoadingActivity.this, UserInitActivity.class);
					} else if (isFirstLaunch) {
						intent.setClass(LoadingActivity.this, NewFeatureActivity.class);
					} else {
						intent.setClass(LoadingActivity.this, MainActivity.class);
					}
					startActivity(intent);
					finish();
				} else if (!PuApp.get().isLogon()
						&& PuApp.get().getLocalDataMgr().citySchoolArrived()) {
					Intent intent = new Intent(LoadingActivity.this, SigninActivity.class);
					startActivity(intent);
					finish();
				} else if (delayTimes > MAX_DELAY_TIMES) {
					NotificationsUtil.ToastTopMsg(mActivity, "暂时无法获取数据");
					finish();
				} else {
					delayTimes++;
					signinOrMain();
				}

			}
		}, DELAYED_GOTO_DURATION);
	}

	CallBack callback = new CallBack() {
		@Override
		public void onSuccess(String response) {
			versionInfo = JSONUtils.fromJson(response, Response.class);
			checkVersion();
		}

		@Override
		public void onFailure(String message) {
			finish();
		}
	};

	private void checkVersion() {
		if (versionInfo == null) {
			signinOrMain();
			return;
		}

		String version = versionInfo.version;
		mNewVersionUrl = versionInfo.response;

		if (TextUtils.isEmpty(version) || TextUtils.isEmpty(mNewVersionUrl)
				|| mCurrent_version.compareTo(version) >= 0) {
			signinOrMain();
		} else {
			showDownloadDialog();
		}
	}

	private void showDownloadDialog() {
		new AlertDialog.Builder(LoadingActivity.this).setTitle("升级应用程序")
				.setMessage(versionInfo.msg)
				.setPositiveButton("立即升级", new DialogInterface.OnClickListener() {
					public void onClick(DialogInterface dialog, int whichButton) {
						signinOrMain();
						DownloadImpl download = new DownloadImpl(mActivity, mNewVersionUrl,
								"PocketUni客户端", String.format("PocketUni_%s.apk",
										versionInfo.version));
						download.startDownload();
					}
				}).setNeutralButton("暂不升级", new DialogInterface.OnClickListener() {
					public void onClick(DialogInterface dialog, int whichButton) {
						signinOrMain();
					}
				}).setCancelable(false).show();
	}
}

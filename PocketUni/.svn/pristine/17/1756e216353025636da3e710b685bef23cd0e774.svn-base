package com.xyhui.activity.app;

import java.io.File;
import java.io.FileOutputStream;
import java.util.List;

import android.annotation.SuppressLint;
import android.app.AlertDialog;
import android.content.ComponentName;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.graphics.Bitmap;
import android.os.Bundle;
import android.os.Environment;
import android.text.TextUtils;
import android.view.KeyEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.webkit.JavascriptInterface;
import android.webkit.WebChromeClient;
import android.webkit.WebSettings;
import android.webkit.WebView;
import android.webkit.WebViewClient;
import android.widget.Button;

import com.mslibs.utils.VolleyLog;
import com.xyhui.R;
import com.xyhui.activity.PuApp;
import com.xyhui.types.Game;
import com.xyhui.utils.DownloadImpl;
import com.xyhui.utils.MySQLiteHelper;
import com.xyhui.utils.Params;
import com.xyhui.utils.PrefUtil;
import com.xyhui.widget.FLActivity;

/**
 * @创建人： dengzh
 * @创建时间:2013-12-11 下午2:38:07
 * @版本 V1.0
 * @Copyright (c) 2013 by 苏州威博世网络科技有限公司.
 */
public class GameCenterActivity extends FLActivity {

	private final String INSTALLED_NO = "0";
	private final String INSTALLED_YES = "1";
	private final String URL_GAMECENTER = "http://pu.websharp.com.cn/mobile_android/index.aspx";

	private Button btnRefresh;
	private Button btnBack;
	private WebView wv;

	MySQLiteHelper mMySQLite;

	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_game_center);

		linkUiVar();
		bindListener();
		ensureUi();
	}

	@Override
	public void linkUiVar() {
		btnBack = (Button) findViewById(R.id.btn_back);
		btnRefresh = (Button) findViewById(R.id.btn_refresh);
		wv = (WebView) findViewById(R.id.webView);
	}

	@Override
	public void bindListener() {
		btnBack.setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View v) {
				// Check if there's history
				if (wv.canGoBack()) {
					wv.goBack();
				} else {
					finish();
				}
			}
		});

		btnRefresh.setOnClickListener(new View.OnClickListener() {
			@Override
			public void onClick(View v) {
				wv.loadUrl(wv.getUrl());
			}
		});
	}

	@Override
	public void ensureUi() {
		mMySQLite = new MySQLiteHelper(this);
		setWebView();
	}

	@Override
	protected void onStart() {
		super.onStart();
		String url = wv.getUrl();
		VolleyLog.d("Url to load:%s", url);
		if (url != null) {
			wv.loadUrl(url);
		} else {
			wv.loadUrl(URL_GAMECENTER);
		}
	}

	@SuppressLint("SetJavaScriptEnabled")
	@SuppressWarnings("deprecation")
	private void setWebView() {
		WebSettings settings = wv.getSettings();
		settings.setJavaScriptEnabled(true);
		settings.setAppCacheEnabled(true);
		settings.setCacheMode(WebSettings.LOAD_NO_CACHE);
		settings.setDefaultZoom(WebSettings.ZoomDensity.FAR);

		// WebView中用来跟页面交互js的类,其中的方法,可以在页面上通过Android.方法名(参数)来调用
		wv.addJavascriptInterface(new WebAppInterface(this), "Android");

		wv.setWebChromeClient(new WebChromeClient() {

		});

		wv.setWebViewClient(new WebViewClient() {
			@Override
			public void onPageStarted(WebView view, String url, Bitmap favicon) {
				super.onPageStarted(view, url, favicon);
				// 开始
				VolleyLog.d("--------------------------onPageStarted--------------------------");
				btnRefresh.setEnabled(false);
				showProgress();
			}

			@Override
			public void onPageFinished(WebView view, String url) {
				super.onPageFinished(view, url);
				// 结束
				VolleyLog.d("--------------------------onPageFinished--------------------------");
				btnRefresh.setEnabled(true);
				dismissProgress();
			}

			@Override
			public boolean shouldOverrideUrlLoading(WebView view, String url) {
				VolleyLog.d(url);
				view.loadUrl(url);
				return true;
			}
		});
	}

	@Override
	public boolean onKeyDown(int keyCode, KeyEvent event) {
		// Check if the key event was the Back button and if there's history
		if ((keyCode == KeyEvent.KEYCODE_BACK) && wv.canGoBack()) {
			wv.goBack();
			return true;
		}

		// If it wasn't the Back key or there's no web page history, bubble up to the default
		// system behavior (probably exit the activity)
		return super.onKeyDown(keyCode, event);
	}

	/**
	 * @创建人： dengzh
	 * @创建时间:2013-12-11 下午2:39:25
	 * @版本 V1.0
	 * @Copyright (c) 2013 by 苏州威博世网络科技有限公司.
	 */
	class WebAppInterface {
		Context mContext;

		/** Instantiate the interface and set the context */
		WebAppInterface(Context c) {
			mContext = c;
		}

		/**
		 * 得到已经安装的游戏的信息
		 * 
		 * @return 已安装游戏的信息
		 */
		@JavascriptInterface
		public String GetAppInstallInfo() {
			// 获取数据库中所有游戏(有过下载的:已安装\未安装)
			List<Game> gameList = mMySQLite.getAllGames();

			if (gameList.size() > 0) {
				String gameInfo = "";
				for (Game game : gameList) {
					if (PuApp.get().isInstalled(game.getPkgName())) {// 已安装
						// 更新已安装游戏在数据库中的状态为YES
						if (INSTALLED_NO.equals(game.getInstalled())) {
							game.setInstalled(INSTALLED_YES);
							mMySQLite.addOrUpdateGame(game);
						}

						// 返回已安装游戏的信息
						gameInfo += game.toString();
						if (gameInfo.length() > 0) {
							return gameInfo.substring(0, gameInfo.length() - 1);
						}
					} else if (INSTALLED_YES.equals(game.getInstalled())) {// 未安装
						// 更新安装后又卸载的游戏在数据库中的状态为NO
						game.setInstalled(INSTALLED_NO);
						mMySQLite.addOrUpdateGame(game);
					}
				}
			}

			// 如果没有任何信息,返回空
			return "";
		}

		/**
		 * 下载apk
		 * 
		 * @param apkUrl
		 * @param pkgName
		 * @param launchPath
		 * @param gameName
		 * @param gameUID
		 * @param iconUrl
		 */
		@JavascriptInterface
		public void downloadApp(String apkUrl, String pkgName, String launchPath, String gameName,
				String gameUID, String iconUrl) {
			String installed = INSTALLED_NO;
			Boolean isInstalled = PuApp.get().isInstalled(pkgName);

			if (isInstalled) {
				installed = INSTALLED_YES;
			}

			String apkFileName = pkgName + ".apk";

			// 更新数据库中游戏相关信息
			mMySQLite.addOrUpdateGame(new Game(gameUID, gameName, pkgName, launchPath, installed,
					apkFileName, apkUrl, iconUrl));

			if (isInstalled) {// 提示已下载
				new AlertDialog.Builder(mContext).setTitle("游戏已下载").setMessage("该游戏已安装,无需重复下载")
						.setPositiveButton("确定", new DialogInterface.OnClickListener() {
							public void onClick(DialogInterface dialog, int whichButton) {

							}
						}).setCancelable(true).show();
			} else {// 开始下载
				DownloadImpl download = new DownloadImpl(mContext, apkUrl, gameName, apkFileName);
				download.startDownload();
			}
		}

		/**
		 * 在这儿可以启动一个启用程序
		 * 
		 * @param gameUID
		 */
		@JavascriptInterface
		public void openApplication(String gameUID) {

			PrefUtil prefUtil = new PrefUtil();
			String oauth_token = prefUtil.getPreference(Params.LOCAL.TOKEN);
			String oauth_token_secret = prefUtil.getPreference(Params.LOCAL.SECRET);
			if (!TextUtils.isEmpty(oauth_token) && !TextUtils.isEmpty(oauth_token_secret)) {
				// 按照token#tokensecret的格式将token信息写入sd卡指定位置,方便游戏读取
				writeToken(oauth_token + "#" + oauth_token_secret);

				Game game = mMySQLite.getGame(gameUID);

				// 启动游戏
				Intent intent = new Intent();
				ComponentName cn = new ComponentName(game.getPkgName(), game.getLaunchPath());
				intent.setComponent(cn);

				mContext.startActivity(intent);
			}
		}

		/**
		 * 将token写入文件,方便游戏读取
		 * 
		 * @param token
		 */
		private void writeToken(String token) {
			FileOutputStream fosToken;
			try {
				fosToken = new FileOutputStream(getFilename());
				fosToken.write(token.getBytes("UTF-8"));
				fosToken.close();
			} catch (Exception e) {
				e.printStackTrace();
			}
		}

		/**
		 * 生成保存token的文件
		 * 
		 * @return token.txt
		 */
		private String getFilename() {
			String filepath = Environment.getExternalStorageDirectory().getPath();
			File file = new File(filepath, "pu");

			if (!file.exists()) {
				file.mkdirs();
			}
			VolleyLog.d(file.getAbsolutePath() + "/token.txt");
			return (file.getAbsolutePath() + "/token.txt");
		}
	}
}

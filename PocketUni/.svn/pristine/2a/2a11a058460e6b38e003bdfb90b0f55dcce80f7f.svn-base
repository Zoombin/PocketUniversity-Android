package com.xyhui.activity.more;

import java.io.File;
import java.io.FileNotFoundException;

import android.app.Activity;
import android.app.AlertDialog;
import android.content.DialogInterface;
import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.net.Uri;
import android.os.Bundle;
import android.os.Environment;
import android.provider.MediaStore;
import android.text.TextUtils;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.RadioButton;

import com.koushikdutta.urlimageviewhelper.UrlImageViewHelper;
import com.mslibs.utils.JSONUtils;
import com.mslibs.utils.NotificationsUtil;
import com.mslibs.utils.VolleyLog;
import com.xyhui.R;
import com.xyhui.activity.PuApp;
import com.xyhui.api.Api;
import com.xyhui.api.CallBack;
import com.xyhui.types.Response;
import com.xyhui.types.User;
import com.xyhui.utils.Preferences;
import com.xyhui.utils.Storage;
import com.xyhui.widget.FLActivity;

public class AccountBaseinfoActivity extends FLActivity {
	private final String PIC_NAME_TEMP = "pu_avatar_temp.jpg";
	private final String PIC_NAME = "pu_avatar.jpg";

	private final String PIC_PATH = Environment.getExternalStorageDirectory() + "/" + PIC_NAME;
	private final String PIC_PATH_TEMP = Environment.getExternalStorageDirectory() + "/"
			+ PIC_NAME_TEMP;

	private final int CAPTURE_PIC = 0;
	private final int CHOOSE_PIC = 1;
	private final int HANDLE_PIC = 2;

	private final int PIC_WIDTH = 150;
	private final int PIC_HEIGHT = 150;

	Button btn_back;
	Button btn_submit;

	ImageView img_avatar;
	EditText edit_nickname;

	RadioButton radio_boy;
	RadioButton radio_girl;

	private User mUser;

	private PuApp mainApp;

	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_account_baseinfo);

		if (getIntent().hasExtra(Preferences.INTENT_EXTRA.USER)) {
			mUser = getIntent().getParcelableExtra(Preferences.INTENT_EXTRA.USER);
		} else {
			VolleyLog.d("no user");
		}

		mainApp = (PuApp) getApplication();

		linkUiVar();
		bindListener();
		ensureUi();
	}

	@Override
	public void linkUiVar() {
		btn_back = (Button) findViewById(R.id.btn_back);
		btn_submit = (Button) findViewById(R.id.btn_submit);

		img_avatar = (ImageView) findViewById(R.id.img_avatar);
		edit_nickname = (EditText) findViewById(R.id.edit_nickname);

		radio_boy = (RadioButton) findViewById(R.id.radio_boy);
		radio_girl = (RadioButton) findViewById(R.id.radio_girl);
	}

	@Override
	public void bindListener() {
		btn_back.setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View v) {
				// 关闭返回
				finish();
			}
		});

		img_avatar.setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View v) {
				ShowPickDialog();
			}
		});

		btn_submit.setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View v) {
				String nickname = edit_nickname.getText().toString();
				String sex = "0";
				if (radio_boy.isChecked()) {
					sex = "1";
				}
				showProgress();
				new Api(callback, mActivity).profileupdate(mainApp.getToken(), nickname, sex,
						PIC_PATH);
			}
		});
	}

	CallBack callback = new CallBack() {

		@Override
		public void onSuccess(String response) {
			dismissProgress();

			Response r = JSONUtils.fromJson(response, Response.class);

			if (null != r) {
				if (!TextUtils.isEmpty(r.response)) {
					// 清除头像图片缓存
					UrlImageViewHelper.remove_(mContext, mUser.face);

					UrlImageViewHelper.setUrlDrawable((ImageView) img_avatar, mUser.face,
							R.drawable.avatar00);

					NotificationsUtil.ToastBottomMsg(mContext, r.response);
				} else if (!TextUtils.isEmpty(r.message)) {
					NotificationsUtil.ToastBottomMsg(mContext, r.message);
				}
			}
		}
	};

	@Override
	public void ensureUi() {
		// 初始化信息
		UrlImageViewHelper.setUrlDrawable((ImageView) img_avatar, mUser.face, R.drawable.avatar00);
		edit_nickname.setText(mUser.uname);
		boolean isboy = false;
		if ("男".equalsIgnoreCase(mUser.sex)) {
			isboy = true;
		}
		radio_boy.setChecked(isboy);
		radio_girl.setChecked(!isboy);
	}

	/**
	 * 选择提示对话框
	 */
	private void ShowPickDialog() {
		if (!Storage.externalStorageAvailable()) {
			NotificationsUtil.ToastBottomMsg(mContext, "sd卡不可用");
			return;
		}

		new AlertDialog.Builder(this).setTitle("设置头像...")
				.setNegativeButton("相册", new DialogInterface.OnClickListener() {
					public void onClick(DialogInterface dialog, int which) {
						dialog.dismiss();
						getAndCropPhoto();
					}
				}).setPositiveButton("拍照", new DialogInterface.OnClickListener() {
					public void onClick(DialogInterface dialog, int whichButton) {
						dialog.dismiss();
						Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
						// 下面这句指定调用相机拍照后的照片存储的路径
						intent.putExtra(MediaStore.EXTRA_OUTPUT,
								Uri.fromFile(new File(PIC_PATH_TEMP)));
						startActivityForResult(intent, CAPTURE_PIC);
					}
				}).show();
	}

	@Override
	protected void onActivityResult(int requestCode, int resultCode, Intent data) {
		super.onActivityResult(requestCode, resultCode, data);
		if (resultCode != Activity.RESULT_OK) {
			VolleyLog.d("requestCode = %d ", requestCode);
			VolleyLog.d("resultCode = %d", resultCode);
			VolleyLog.d("data = %s", null == data ? "null" : data.toString());
			return;
		}
		switch (requestCode) {
		case CAPTURE_PIC:
			cropPhoto(Uri.fromFile(new File(PIC_PATH_TEMP)));
			break;
		case CHOOSE_PIC:
		case HANDLE_PIC:
			setPicToView(Uri.fromFile(new File(PIC_PATH)));
			break;
		default:
			break;
		}
	}

	/**
	 * 裁剪图片方法实现
	 * 
	 * @param uri
	 */
	public void cropPhoto(Uri uri) {
		Intent intent = new Intent("com.android.camera.action.CROP");
		intent.setDataAndType(uri, "image/*");
		// 下面这个crop=true是设置在开启的Intent中设置显示的VIEW可裁剪
		intent.putExtra("crop", "true");
		// aspectX aspectY 是宽高的比例
		intent.putExtra("aspectX", 1);
		intent.putExtra("aspectY", 1);
		// outputX outputY 是裁剪图片宽高
		intent.putExtra("outputX", PIC_WIDTH);
		intent.putExtra("outputY", PIC_HEIGHT);
		intent.putExtra("scale", true);
		intent.putExtra("return-data", false);
		intent.putExtra(MediaStore.EXTRA_OUTPUT, Uri.fromFile(new File(PIC_PATH)));
		intent.putExtra("outputFormat", Bitmap.CompressFormat.JPEG.toString());
		intent.putExtra("noFaceDetection", false);
		startActivityForResult(intent, HANDLE_PIC);
	}

	private void getAndCropPhoto() {
		Intent intent = new Intent(Intent.ACTION_GET_CONTENT, null);
		intent.setType("image/*");
		intent.putExtra("crop", "true");
		intent.putExtra("aspectX", 1);
		intent.putExtra("aspectY", 1);
		intent.putExtra("outputX", PIC_WIDTH);
		intent.putExtra("outputY", PIC_HEIGHT);
		intent.putExtra("scale", true);
		intent.putExtra("return-data", false);
		intent.putExtra(MediaStore.EXTRA_OUTPUT, Uri.fromFile(new File(PIC_PATH)));
		intent.putExtra("outputFormat", Bitmap.CompressFormat.JPEG.toString());
		intent.putExtra("noFaceDetection", false); // no face detection
		startActivityForResult(intent, HANDLE_PIC);
	}

	/**
	 * 保存裁剪之后的图片数据
	 * 
	 * @param picdata
	 */
	private void setPicToView(Uri uri) {
		Bitmap photo = decodeUriAsBitmap(uri);

		if (null != photo) {
			// BitmapDrawable bitmapDrawable = new BitmapDrawable(this.getResources(), photo);
			img_avatar.setImageBitmap(photo);
		}

	}

	private Bitmap decodeUriAsBitmap(Uri uri) {
		Bitmap bitmap = null;
		try {
			bitmap = BitmapFactory.decodeStream(getContentResolver().openInputStream(uri));
		} catch (FileNotFoundException e) {
			e.printStackTrace();
			return null;
		}
		return bitmap;
	}
}

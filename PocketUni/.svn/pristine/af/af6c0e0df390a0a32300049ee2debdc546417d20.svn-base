package com.xyhui.activity.app;

import android.app.AlertDialog;
import android.content.DialogInterface;
import android.content.DialogInterface.OnClickListener;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.widget.TextView;

import com.mslibs.api.CallBack;
import com.mslibs.utils.JSONUtils;
import com.mslibs.utils.NotificationsUtil;
import com.xyhui.R;
import com.xyhui.activity.PuApp;
import com.xyhui.activity.weibo.UserHomePageActivity;
import com.xyhui.api.Api;
import com.xyhui.utils.MediaPlayerUtils;
import com.xyhui.utils.Preferences;
import com.xyhui.utils.ShakeDetector;
import com.xyhui.utils.ShakeDetector.OnShakeListener;
import com.xyhui.widget.FLActivity;

public class ShakeActivity extends FLActivity {
	private final int TIME_INTERVAL = 2000;
	private MediaPlayerUtils mMpUtils;

	private TextView tv_left_times;

	// 防止快速摇动时连续调用相关监听器的功能
	private boolean mShaked = false;

	private boolean mDialogShowing = false;

	private ShakedData mShakedData;
	private ShakeData mShakeData;

	private Handler mHandler = new Handler();

	private ShakeDetector mShakeDetector;

	private OnShakeListener mOnShakeListener = new OnShakeListener() {

		@Override
		public void onShake() {
			if (!mShaked) {
				mShaked = true;
				mMpUtils.reset();
				mMpUtils.play("shake.wav", true);
				mHandler.postDelayed(new Runnable() {
					@Override
					public void run() {
						mMpUtils.reset();
						mShaked = false;
						showProgress();
						new Api(shakedCB).shakeYY(PuApp.get().getToken());
					}
				}, TIME_INTERVAL);
			}
		}
	};

	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_app_shake);
		ensureUi();
		linkUiVar();
	}

	@Override
	public void linkUiVar() {
		tv_left_times = (TextView) findViewById(R.id.tv_left_times);
	}

	@Override
	public void bindListener() {

	}

	@Override
	public void ensureUi() {
		mShakeDetector = new ShakeDetector(mContext);
		mShakeDetector.registerOnShakeListener(mOnShakeListener);
	}

	@Override
	protected void onStart() {
		super.onStart();
		mMpUtils = new MediaPlayerUtils(mContext);
		mDialogShowing = true;
		new Api(shakeCB).shakeStatus(PuApp.get().getToken());
	}

	@Override
	protected void onResume() {
		super.onResume();
		if (!mDialogShowing) {
			mShakeDetector.start();
		}
	}

	@Override
	protected void onPause() {
		super.onPause();
		mShakeDetector.stop();
	}

	@Override
	protected void onStop() {
		super.onStop();
		mMpUtils.onStop();
	}

	@Override
	protected void onDestroy() {
		super.onDestroy();
		mShakeDetector.unregisterOnShakeListener(mOnShakeListener);
	}

	CallBack shakeCB = new CallBack() {
		@Override
		public void onSuccess(String response) {
			mShakeData = JSONUtils.fromJson(response, ShakeData.class);

			if (null != mShakeData) {
				tv_left_times.setText(String.format("剩余次数：%d", mShakeData.rest));
				if (mShakeData.rest > 0 && mShakeData.cost > 0) {
					showGiftDialog(0);
				} else {
					mDialogShowing = false;
					mShakeDetector.start();
				}
			}
		}
	};

	CallBack shakedCB = new CallBack() {
		@Override
		public void onSuccess(String response) {
			dismissProgress();
			mShakedData = JSONUtils.fromJson(response, ShakedData.class);

			if (null != mShakedData) {
				if (0 == mShakedData.status) {
					NotificationsUtil.ToastBottomMsg(mContext, mShakedData.msg);
				} else if (1 == mShakedData.status) {
					tv_left_times.setText(String.format("剩余次数：%d", mShakedData.rsp.rest));
					showGiftDialog(mShakedData.data.type);
				}
			}
		}
	};

	private void showGiftDialog(final int type) {
		mShakeDetector.stop();
		mDialogShowing = true;

		if (0 != type) {
			mMpUtils.play("shake_match.wav", false);
		}

		String title = "", message = "";

		switch (type) {
		case 0:
			title = "注意";
			message = "你今天的免费摇奖次数已经用完了，如果继续，系统将会扣除你一定的PU币，继续吗？";
			break;
		case 1:
			title = "再加吧劲吧！";
			message = "这次啥都没摇到";
			break;
		case 2:
			title = "恭喜!";
			message = String.format("你获得了%.2f个PU币", mShakedData.data.win / 100.0);
			break;
		case 3:
			title = "运气不错哦！";
			message = String.format("你摇到了一个来自%s的%s生", mShakedData.data.school,
					mShakedData.data.sex);
			break;
		}

		AlertDialog.Builder builder = new AlertDialog.Builder(mActivity).setTitle(title)
				.setMessage(message).setPositiveButton("继续", new OnClickListener() {
					public void onClick(DialogInterface dialog, int whichButton) {
						if (null != mShakedData && mShakedData.rsp.cost > 0 && 0 != type
								&& mShakedData.rsp.rest > 0) {
							showGiftDialog(0);
						} else {
							mShakeDetector.start();
							mDialogShowing = false;
						}
					}
				}).setNegativeButton("不摇了", new OnClickListener() {
					public void onClick(DialogInterface dialog, int whichButton) {
						finish();
					}
				}).setCancelable(false);

		if (3 == type) {
			builder.setNeutralButton("去看看", new OnClickListener() {
				@Override
				public void onClick(DialogInterface dialog, int which) {
					mDialogShowing = false;
					// 打开个人主页
					Intent intent = new Intent();
					intent.setClass(mActivity, UserHomePageActivity.class);
					intent.putExtra(Preferences.INTENT_EXTRA.USER_ID, mShakedData.data.win + "");
					mActivity.startActivity(intent);
				}
			});
		}

		builder.create().show();
	}

	class ShakedData {
		int status;
		String msg;
		Gift data;
		ShakeData rsp;

		class Gift {
			int type;
			int win;
			String realname;
			String school;
			String sex;
		}
	}

	class ShakeData {
		int rest;// 剩余次数，
		int times;// 当前次数
		int cost;// 费用
	}
}
